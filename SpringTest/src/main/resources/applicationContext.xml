<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--&lt;!&ndash;    <bean id="userDao" class="dao.UserDao"/>&ndash;&gt;-->

<!--    &lt;!&ndash; 使用静态工厂方法创建 userDao Bean &ndash;&gt;-->
<!--&lt;!&ndash;    <bean id="userDao" class="factory.MyBeanFactory" factory-method="createDaoBean"/>&ndash;&gt;-->

<!--    &lt;!&ndash; 定义实例工厂 Bean &ndash;&gt;-->
<!--    <bean id="daoBeanFactory" class="factory.DaoBeanFactory"/>-->

<!--    &lt;!&ndash; 使用实例工厂方法创建 userDao Bean &ndash;&gt;-->
<!--    <bean id="userDao" factory-bean="daoBeanFactory" factory-method="createDaoBean"/>-->

<!--&lt;!&ndash;    新增一个userService的bean,在配置中实现userDao的依赖注入。&ndash;&gt;-->
<!--&lt;!&ndash;    <bean id="userService" class="service.UserService">&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="userDao" ref="userDao"/>&ndash;&gt;-->
<!--&lt;!&ndash;    </bean>&ndash;&gt;-->

<!--    &lt;!&ndash; 定义 userService Bean，使用构造器注入 &ndash;&gt;-->
<!--    <bean id="userService" class="service.UserService">-->
<!--        <constructor-arg ref="userDao"/> &lt;!&ndash; 注入 userDao &ndash;&gt;-->
<!--    </bean>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/javaee"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDao" class="dao.UserDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <!-- 启用组件扫描和 AspectJ 自动代理 -->
    <context:component-scan base-package="aop"/>
    <aop:aspectj-autoproxy/>

<!--    <bean name="adviceBefore" class="aop.AdviceBefore"/>-->
<!--    <bean name="adviceAfter" class="aop.AdviceAfter"/>-->
<!--    <bean name="adviceAround" class="aop.AdviceAround"/>-->
<!--    <bean name="adviceThrow" class="aop.AdviceThrow"/>-->

    <!-- 目标类 -->
    <bean id="calculatorTarget" class="service.Calculator"/>

<!--    &lt;!&ndash; 代理工厂配置 &ndash;&gt;-->
<!--    <bean id="calculatorProxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
<!--        <property name="proxyInterfaces" value="service.impl.ICalculator"/>-->
<!--        <property name="target" ref="calculatorTarget"/>-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--                <value>adviceAround</value>-->
<!--                <value>adviceBefore</value>-->
<!--                <value>adviceAfter</value>-->
<!--                <value>adviceThrow</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

</beans>
